#!/usr/bin/env php
<?php # (jEdit options) :folding=explicit:collapseFolds=1:
/*****************************************************************************
INPUTS / SWITCHES (via $_SERVER['argv']):
    inDir           the a directory of files ending in ".pdb"
    -q              quiet mode (no progress messages)

OUTPUTS / RESULTS:
    Runs clash, Rama, rota, Cb dev analysis on all input files.

*****************************************************************************/
// EVERY *top-level* page must start this way:
// 1. Define it's relationship to the root of the MolProbity installation.
// Pages in subdirectories of lib/ or public_html/ will need more "/.." 's.
    if(!defined('MP_BASE_DIR')) define('MP_BASE_DIR', realpath(dirname(__FILE__).'/..'));
// 2. Include core functionality - defines constants, etc.
    require_once(MP_BASE_DIR.'/lib/core.php');
    require_once(MP_BASE_DIR.'/lib/model.php');
    require_once(MP_BASE_DIR.'/lib/analyze.php');
// 3. Restore session data. If you don't want to access the session
// data for some reason, you must call mpInitEnvirons() instead.
    mpInitEnvirons();       // use std PATH, etc.
    //mpStartSession(true);   // create session dir
// 5. Set up reasonable values to emulate CLI behavior if we're CGI
    set_time_limit(0); // don't want to bail after 30 sec!

#{{{ summaryAnalysis - run all analysis for one file
############################################################################
/**
* Uses one session per file processed to avoid overflowing space requirements.
*/
function summaryAnalysis($modelID)
{
    global $optStats, $optClash, $optCbeta, $optRota, $optRama;
    $out = "";
    
    $model =& $_SESSION['models'][$modelID];
    
    if($optStats)
    {
        $pdbstats = $model['stats'];
        $out .= ":$pdbstats[chains]:$pdbstats[residues]:$pdbstats[nucacids]:$pdbstats[resolution]:$pdbstats[rvalue]:$pdbstats[rfree]";
    }
    
    // Run analysis; load data
    $pdbfile = $_SESSION['dataDir'].'/'.MP_DIR_MODELS."/$model[pdb]";
    $rawDir  = $_SESSION['dataDir'].'/'.MP_DIR_RAWDATA;
        if(!file_exists($rawDir)) mkdir($rawDir, 0777);
    
    if($optClash)
    {
        runClashlist($pdbfile, "$rawDir/$model[prefix]clash.data");
        $clash = loadClashlist("$rawDir/$model[prefix]clash.data");
        $clashstats = runClashStats($pdbstats['resolution'], $clash['scoreAll'], $clash['scoreBlt40']);
        $out .= ":" . $clash['scoreAll'] . ":" . $clash['scoreBlt40'];
        $out .= ":$clashstats[minresol]:$clashstats[maxresol]:$clashstats[n_samples]:$clashstats[pct_rank]:$clashstats[pct_rank40]";
    }
    if($optCbeta)
    {
        runCbetaDev($pdbfile, "$rawDir/$model[prefix]cbdev.data");
        $cbdev = loadCbetaDev("$rawDir/$model[prefix]cbdev.data");
        $badCbeta = findCbetaOutliers($cbdev);
        $cbStats = calcCbetaStats($cbdev);
        $out .= ":" . count($badCbeta) . ":" . count($cbdev);
        $out .= ":$cbStats[max]:$cbStats[median]:".round($cbStats['mean'], 3);
    }
    if($optRota)
    {
        runRotamer($pdbfile, "$rawDir/$model[prefix]rota.data");
        $rota = loadRotamer("$rawDir/$model[prefix]rota.data");
        $badRota = findRotaOutliers($rota);
        $out .= ":" . count($badRota) . ":" . count($rota);
    }
    if($optRama)
    {
        runRamachandran($pdbfile, "$rawDir/$model[prefix]rama.data");
        $rama = loadRamachandran("$rawDir/$model[prefix]rama.data");
        foreach($rama as $r)
            $ramaScore[ $r['eval'] ] += 1;
        $out .= ":" . ($ramaScore['OUTLIER']+0) . ":" . ($ramaScore['Allowed']+0) . ":" . ($ramaScore['Favored']+0) . ":" . count($rama);
    }
    
    $out .= "\n"; // end of this line
    return $out;
}
#}}}########################################################################

#{{{ a_function_definition - sumary_statement_goes_here
############################################################################
/**
* Documentation for this function.
*/
//function someFunctionName() {}
#}}}########################################################################

# MAIN - the beginning of execution for this page
############################################################################
// Default options
$optVerbose = true;
$optStats   = true;
$optClash   = true;
$optCbeta   = true;
$optRota    = true;
$optRama    = true;

// First argument is the name of this script...
if(is_array($_SERVER['argv'])) foreach(array_slice($_SERVER['argv'], 1) as $arg)
{
    if($arg == '-q')            $optVerbose = false;
    elseif($arg == '-nostats')  $optStats = false;
    elseif($arg == '-noclash')  $optClash = false;
    elseif($arg == '-nocbeta')  $optCbeta = false;
    elseif($arg == '-norota')   $optRota = false;
    elseif($arg == '-norama')   $optRama = false;
    elseif(!isset($inDir))      $inDir = $arg;
    else                        die("Too many or unrecognized arguments: '$arg'\n");
}

if(!isset($inDir))          die("No input directory specified.\n");
elseif(!is_dir($inDir))     die("Input directory '$inDir' does not exist.\n");

if($optVerbose)
{
    echo "#INPUT  : ".realpath($inDir)."\n";

    // Describe the output of this script
    echo "#pdbFileName";
    if($optStats)   echo ":chains:residues:nucacids:resolution:rvalue:rfree";
    if($optClash)   echo ":clashscore:clashscoreB<40:minresol:maxresol:n_samples:pct_rank:pct_rank40";
    if($optCbeta)   echo ":cbeta>0.25:numCbeta:maxCbeta:medianCbeta:meanCbeta";
    if($optRota)    echo ":rota<1%:numRota";
    if($optRama)    echo ":ramaOutlier:ramaAllowed:ramaFavored:numRama";
    echo "\n";
}

foreach(listDir($inDir) as $inFile) if(endsWith($inFile, ".pdb"))
{
    mpStartSession(true); // create a new session
    $inpath = $inDir.'/'.$inFile;
    // Need to ignore segIDs for stupid Top500 with seg new_ for all H
    $id = addModelOrEnsemble($inpath, basename($inpath), false, true);
    if(isset($_SESSION['ensembles'][$id]))
    {
        foreach($_SESSION['ensembles'][$id]['models'] as $modelID)
        {
            echo basename($_SESSION['models'][$modelID]['pdb']);
            echo summaryAnalysis($modelID);
        }
    }
    else
    {
        echo basename($inFile);
        echo summaryAnalysis($id);
    }
    // Clean up and go home
    mpDestroySession();
}

############################################################################
// Clean up and go home
//mpDestroySession(); // only call this if we created one
?>
